from nose.tools import assert_equal

from Emirge.rep_finder import RepFinder
from Emirge.log import INFO

read_file_1 = "tests/test_data/twenty_seq_database.fasta"

sequence = \
    "CCTGGTTGATCCTGCCAGTAGTCATATGCTTGTCTCAAAGATTAAGCCATGCATGTCTCAGTATA" \
    "AGCAGTCAAATGGTGAAACTGCGAATGGCTCATTAAAGCAGTTATAGTTTATTTGATGGTTGCTG" \
    "\CTACATGGATAACTGTGGTAATTCTAGAGCTAATACATGCATCCAAGCCCGACTTTGCAGAAGG" \
    "GTTGTGTTTATTAGATCCAGAACCAACCCAGGCTCCGCCTGGTCATGTGGTGATTCATGATAACT" \
    "TGACGAATCGTGCGGCCTTGCCGACGATGCGTCATTCAAGTTTCTGACCTATCAGCTTCCGACGG" \
    "TAGGGTATTGGCCTACCGTGGCAATGACGGGTAACGGAGAATTAGGGTTTGATTCCGGAGAGGGA" \
    "GCCTGAGAAACGGCTACCACATCTAAGGAAGGCAGCAGGCGCGCAAATTACCCAATCCTGACACA" \
    "GGGAGGTAGTGACAAGAAATAACAATACAGGGCATCCATGTCTTGTAATTGGAATGAACAGAATTT" \
    "AAATCTCTTTATGAGTATCAATTGGAGGGCAAGTCTGGTGCCAGCAGCCGCGGTAATTCCAGCTC" \
    "CAATAGCGTATATTAAAGTTGTTGCGGTTAAAAAGCTCGTAGTTGGATTTCTGTTGAGGATGACC" \
    "GGTCCGCCCTCTGGGTGTGTATCTGGCTCAGCCTTGACATCTTTCTGAAGAACGTATCTGCACTT" \
    "GACTGTGTGGTGCATTAAAAAGCTCGTAGTTGGATTTCTGTTGAGGATGACCGGTCCGCCCTCTG" \
    "GGTGTGTATCTGGCTCAGCCTTGACATCTTTCTGAAGAACGTATCTGCACTTGACTGTGTGGTGC" \
    "GGAATTTGGGACATTTACCTTGAGGAAATTAGAGTGTTTCAAGCAAGCGCACGCTTTGAATACAT" \
    "TAGCATGGAATAATAAGATAGGACCTCAGTTCTATTTTGTTGGTTTCTAGAGCTGTGGTAATGGT" \
    "TGATAGGGATAGTTGGGGGCATTCGTATTTAACTGTCAGAGGTGAAATTCTTGGATTTGTTAAAG" \
    "ACGGACTACTGCGAAAGCATTTGCCAAGGATGTTTTCATTGATCAAGAACGAAAGTTAGGGGATC" \
    "GAAGACGATCAGATACCGTCCTAGTCTTAACCATAAACCATGCCAACTAGAGATTGGAGGTCGTT" \
    "ACTTGCATGACTCTTTCAGCACCTTATGAGAAATCAAAGTCTTTGGGTTCCGGGGGGAGTATGGT" \
    "CGCAAGGCTGAAACTTAAAGGAATTGACGGAAGGGCACCACCAGGAGTGCTCGGACGCCGAATTA" \
    "AACTGAGTTGTGCCCCTTTGAATGGTCGTCCAGACATAGTAAGGATTGACAGATTGAGAGCTCTT" \
    "TCTTGATTCTATGGGTGGTGGTGCATGGCCGTTCTTAGTTGGTGGAGTGATTTGTCTGGTTAATT" \
    "CCGTTAACGAACGAGACCTTAACCTGCTAAATAGTTACATGTAACCTCGGTTACATGGGCAACTT" \
    "CTTAGAGGGACTTTGTGTGTCTAACGCAAGGAAGTTTGAGGCAATAACAGGTCTGTGATGCCCTT" \
    "AGATGTCCTGGGCTGCACGCGCGCTACACTGATGCGCTCAACAAGTTTTCGATCTTGCCCGAAAT" \
    "GGCTGGGTAATCTTTTTAAAATCTTAGATGTCCTGGGCTGCACGCGCGCTACACTGATGCGCTCA" \
    "ACAAGTTTTCGATCTTGCCCGAAATGGCTGGGTAATCTTTTTAAAATGCATCGTGATGGGGATAG" \
    "ATCATTGCAATTATTGATCTTCAACGAGGAATTCCTAGTAAGCGCGAGTCATCAGCTCGTGCTGA" \
    "TTACGTCCCTGCCCTTTGTACACACCGCCCGTCGCTCCTACCGATTGAGTGATCCGGTGAATAAT" \
    "TCGGACTGACGCAGTGCTCAGCTTCTGGACGTTGTGTTGGAAAGTTTCATGAACCTTATCACTTA" \
    "GAGGAAGGAGAAGTCGTAACAAGGTTTCCGTAGGTGAACCTGCGGAAG"


class test_RepFinder():
    def __init__(self):
        self.r = RepFinder()

    def test_default(self):
        assert_equal(self.r.check(sequence),
                     [[116, 613, 730], [90, 1558, 1648]]
                     )

    def test_no_result(self):
        assert_equal(self.r.check(sequence, minlen=120),
                     []
                     )

    def test_other_k(self):
        for k in xrange(8,15):
            self.r.set_k(k)
            self.test_default()
            self.test_no_result()